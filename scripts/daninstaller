#!/bin/sh

function main() {
	while :; do 
		case "${1-}" in 
			-h | --help) usage; exit 0;;
			-?*) echo -e "Opção desconhecida: ${1-}\n$(usage)\n"; exit 1 ;;
			*) break ;;
		esac
	done

	# One day I'll make it parse command line stuff, but like, not today 
	preinstall
	custom_scripts
	suckless
	custom_dotfiles
	general
	gamer
	programmer
}

function usage() {
	cat <<EOF
daninstaller: Personal Arch Post Install Script
by Dan 

Installs stuff I use on the daily 

USAGE: $(basename ${BASH_SOURCE[0]}) [OPTIONS]

OPTIONS:
	-h, --help:	Gets you here

EOF
}

function preinstall() {
	# Stuff I use to install other stuff 
	sudo pacman -Syyu 
	echo -e "[preinstall] System update finished"

	sudo pacman -S wget curl
	sudo pacman -S --needed base-devel 
	echo -e "[preinstall] Base packages"

	cd ~/Downloads
	git clone https://aur.archlinux.org/yay.git
	cd yay
	makepkg -si 
	echo -e "[preinstall] Yay installed"
	cd ..

	git clone https://github.com/ryanoasis/nerd-fonts --depth 1
	cd nerd-fonts 
	./install.sh FiraMono
	echo -e "[preinstall] fonts installed"
}

function custom_scripts() {
	mkdir ~/.local/
	mkdir ~/.local/bin
	mkdir ~/.local/functions
	echo -e "[custom_scripts] Directories for local scripts created"

	cp ~/Downloads/dotfiles/scripts/* ~/.local/bin/
	cp ~/Downloads/dotfiles/functions/* ~/.local/functions/
	echo -e "[custom_scripts] Custom scripts added to proper folders"
}

function suckless() {
	mkdir ~/Downloads/suckless
	cd ~/Downloads/suckless
	echo -e "[suckless] suckless directory created"

	git clone https://git.suckless.org/dwm
	git clone https://git.suckless.org/st
	git clone https://git.suckless.org/surf
	git clone https://git.suckless.org/tabbed
	git clone https://git.suckless.org/dmenu
	echo -e "[suckless] tools cloned"

	sudo echo <<EOF
[Desktop Entry]	
Name=dwm
Comment=O brabo
Exec=dwmlauncher
Type=Application
EOF 
>> /usr/share/xsessions/dwm.desktop
	echo -e "[suckless] desktop file for suckless has been added"

	cd dwm
	cp ~/Downloads/dotfiles/dandwm.diff
	patch < dandwm.diff
	cp config.def.h config.h
	sudo make clean install 
	cd ..

	cd st
	cp ~/Downloads/dotfiles/danst.diff
	patch < danst.diff
	cp config.def.h config.h
	sudo make clean install 
	cd ..

	cd surf
	cp config.def.h config.h
	sudo make clean install 
	cd ..

	cd dmenu
	cp config.def.h config.h
	sudo make clean install 
	cd ..

	cd tabbed
	cp config.def.h config.h
	sudo make clean install 
	cd ..

}

function custom_dotfiles() {
	cat ~/Downloads/dotfiles/bashrc >> ~/.bashrc
	cat ~/Downloads/dotfiles/xinitrc >> ~/.xinitrc

	mkdir ~/.config/nvim
	touch ~/.config/nvim/init.vim
	cat ~/Downloads/dotfiles/init.vim >> ~/.config/nvim/init.vim

	sh -c 'curl -fLo "${XDG_DATA_HOME:-$HOME/.local/share}"/nvim/site/autoload/plug.vim --create-dirs \
       https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim'
	echo -e "[custom_dotfiles] custom dotfiles appended to existing configs "
}

function gamer() {
	sudo pacman -S steam lutris gamemode wine-staging vkd3d 
	# sudo yay -S leagueoflegends-git 
	echo -e "[gamer] Gamer stuff added"
}

function general() {
	sudo pacman -S xournalpp krita webapp-manager obs-studio 
	yes | sudo yay -S --no-confirm librewolf-bin obsidian 
	echo -e "[general] General usage software added"
}

function programmer () {
	sudo pacman -S neovim
	yes | sudo yay -S --no-confirm asdf-vm 
	echo -e "[general] Programmer stuff added"
}

function asdf_langs() {
	asdf plugin add python
	asdf plugin add java
	asdf plugin add rust 
	asdf plugin add R
	echo -e "[asdf_langs] Plugins added"

	asdf install python 3.10.0
	asdf install java openjdk-16
	asdf install rust latest 
	asdf install R latest 
	echo -e "[asdf_langs] Languages installed"
}

main "$@"
